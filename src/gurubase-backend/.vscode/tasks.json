{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "shell_plus",
            "type": "shell",
            "command": "python manage.py shell_plus --print-sql",
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "problemMatcher": [],
            "presentation": {}
        },
        {
            "label": "unittest",
            "type": "shell",
            "command": "python manage.py test",
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "problemMatcher": [],
            "presentation": {}
        },
        {
            "label": "coverage",
            "type": "shell",
            "command": "coverage run --source='.' manage.py test && coverage report && coverage html",
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "problemMatcher": [],
            "presentation": {}
        },
        {
            "label": "migrate_runserver",
            "type": "shell",
            "command": "./migrate_runserver.sh",
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "problemMatcher": [],
            "presentation": {}
        },
        {
            "label": "celery_worker_1",
            "type": "shell",
            "command": "celery --app backend worker --purge --loglevel=info --hostname worker1@%h",
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "problemMatcher": [],
            "presentation": {
                "group": "celery_workers"
            }
        },
        {
            "label": "celery_worker_2",
            "type": "shell",
            "command": "celery --app backend worker --purge --loglevel=info --hostname worker2@%h",
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "problemMatcher": [],
            "presentation": {
                "group": "celery_workers"
            }
        },
        {
            "label": "celery_beat",
            "type": "shell",
            "command": "celery --app backend beat --pidfile= --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler",
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "problemMatcher": []
        },
        {
            "label": "Celery_Workers",
            "dependsOn": [
                "celery_worker_1",
                "celery_worker_2"
            ],
            "problemMatcher": []
        },
        {
            "label": "Celery_Beat_2_Workers",
            "dependsOn": [
                "celery_worker_1",
                "celery_worker_2",
                "celery_beat"
            ],
            "dependsOrder": "parallel",
            "problemMatcher": []
        },
        {
            "label": "Celery_Beat_1_Worker",
            "dependsOn": [
                "celery_worker_1",
                "celery_beat"
            ],
            "problemMatcher": []
        },
        {
            "label": "discord_listener",
            "type": "shell",
            "command": "python manage.py discordListener",
            "options": {
                "cwd": "${workspaceFolder}/backend"
            },
            "problemMatcher": []
        }
    ],
    "inputs": [
        {
            "id": "name",
            "type": "promptString",
            "description": "Name of the resource",
        },
        {
            "id": "type",
            "type": "promptString",
            "description": "Type of the resource",
        },
    ]
}